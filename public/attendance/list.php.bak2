<?php
require_once '../includes/header.php';
require_once '../../config/utils.php';

// Initialize PDO connection
$pdo = get_pdo_connection();

// Initialize variables
$courses = [];
$subjects = [];
$students_list = [];
$attendance_records = [];

// Filter parameters with defaults to show all records
$filter_start_date = $_GET['start_date'] ?? '';
$filter_end_date = $_GET['end_date'] ?? '';
$filter_course_id = $_GET['course_id'] ?? '';
$filter_subject_id = $_GET['subject_id'] ?? '';
$filter_student_id = $_GET['student_id'] ?? '';
$filter_status = $_GET['status'] ?? '';

// Pagination settings - increased to show more records per page
$records_per_page = 20;
$current_page = isset($_GET['page']) ? max(1, (int)$_GET['page']) : 1;
$offset = ($current_page - 1) * $records_per_page;

// Fetch all available courses based on user role
try {
    if (has_role('admin')) {
        $stmt = $pdo->query("SELECT id, name FROM courses ORDER BY name");
    } elseif (has_role('teacher')) {
        $stmt = $pdo->prepare("
            SELECT DISTINCT c.id, c.name 
            FROM courses c 
            JOIN subjects s ON c.id = s.course_id 
            WHERE s.teacher_id = ? 
            ORDER BY c.name
        ");
        $stmt->execute([$_SESSION['user_id']]);
    } else {
        // For students
        $stmt = $pdo->prepare("
            SELECT DISTINCT c.id, c.name 
            FROM courses c 
            JOIN student_courses sc ON c.id = sc.course_id 
            WHERE sc.student_id = (SELECT id FROM students WHERE user_id = ?)
            ORDER BY c.name
        ");
        $stmt->execute([$_SESSION['user_id']]);
    }
    $courses = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    error_log("Error fetching courses: " . $e->getMessage());
}

// Fetch all students for filter (Admin/Teacher only)
if (has_role('admin') || has_role('teacher')) {
    try {
        $stmt = $pdo->query("SELECT id, first_name, last_name FROM students ORDER BY last_name, first_name");
        $students_list = $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        error_log("Error fetching students: " . $e->getMessage());
    }
}

// Build query for attendance records
$sql = "SELECT 
            a.id as attendance_id,
            a.date,
            a.status,
            s.id as student_id,
            s.first_name as student_first_name,
            s.last_name as student_last_name,
            sub.name as subject_name,
            c.name as course_name,
            u.first_name as marked_by_first_name,
            u.last_name as marked_by_last_name,
            a.created_at
        FROM attendance a
        JOIN students s ON a.student_id = s.id
        JOIN subjects sub ON a.subject_id = sub.id
        JOIN courses c ON sub.course_id = c.id
        JOIN users u ON a.marked_by = u.id
        WHERE 1=1";

// Also fetch initial subjects if course is selected
if ($filter_course_id) {
    try {
        if (has_role('admin')) {
            $stmt = $pdo->prepare("SELECT id, name FROM subjects WHERE course_id = ? ORDER BY name");
            $stmt->execute([$filter_course_id]);
        } elseif (has_role('teacher')) {
            $stmt = $pdo->prepare("
                SELECT id, name 
                FROM subjects 
                WHERE course_id = ? AND teacher_id = ?
                ORDER BY name
            ");
            $stmt->execute([$filter_course_id, $_SESSION['user_id']]);
        } else {
            $stmt = $pdo->prepare("
                SELECT DISTINCT s.id, s.name
                FROM subjects s
                JOIN student_courses sc ON s.course_id = sc.course_id
                WHERE s.course_id = ? 
                AND sc.student_id = (SELECT id FROM students WHERE user_id = ?)
                ORDER BY s.name
            ");
            $stmt->execute([$filter_course_id, $_SESSION['user_id']]);
        }
        $subjects = $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        error_log("Error fetching subjects for selected course: " . $e->getMessage());
    }
}

$count_sql = "SELECT COUNT(*) FROM attendance a
              JOIN students s ON a.student_id = s.id
              JOIN subjects sub ON a.subject_id = sub.id
              JOIN courses c ON sub.course_id = c.id
              JOIN users u ON a.marked_by = u.id
              WHERE 1=1";

$params = [];

// Apply filters
if ($filter_start_date && isValidDate($filter_start_date)) {
    $sql .= " AND a.date >= ?";
    $count_sql .= " AND a.date >= ?";
    $params[] = $filter_start_date;
}
if ($filter_end_date && isValidDate($filter_end_date)) {
    $sql .= " AND a.date <= ?";
    $count_sql .= " AND a.date <= ?";
    $params[] = $filter_end_date;
}
if ($filter_course_id) {
    $sql .= " AND c.id = ?";
    $count_sql .= " AND c.id = ?";
    $params[] = $filter_course_id;
}
if ($filter_subject_id) {
    $sql .= " AND sub.id = ?";
    $count_sql .= " AND sub.id = ?";
    $params[] = $filter_subject_id;
}
if ($filter_student_id) {
    $sql .= " AND s.id = ?";
    $count_sql .= " AND s.id = ?";
    $params[] = $filter_student_id;
}
if ($filter_status) {
    $sql .= " AND a.status = ?";
    $count_sql .= " AND a.status = ?";
    $params[] = $filter_status;
}

// Role-based access control
if (has_role('student')) {
    // Students can only see their own records
    $stmt_student_id = $pdo->prepare("SELECT id FROM students WHERE user_id = ?");
    $stmt_student_id->execute([$_SESSION['user_id']]);
    $current_student_id = $stmt_student_id->fetchColumn();
    if ($current_student_id) {
        $sql .= " AND s.id = ?";
        $count_sql .= " AND s.id = ?";
        $params[] = $current_student_id;
    }
} elseif (has_role('teacher')) {
    // Teachers can only see records for their subjects
    $sql .= " AND sub.teacher_id = ?";
    $count_sql .= " AND sub.teacher_id = ?";
    $params[] = $_SESSION['user_id'];
}

// Get total records for pagination
try {
    $stmt_count = $pdo->prepare($count_sql);
    $stmt_count->execute($params);
    $total_records = $stmt_count->fetchColumn();
} catch (PDOException $e) {
    error_log("Error counting attendance records: " . $e->getMessage());
    $total_records = 0;
}

$total_pages = ceil($total_records / $records_per_page);

// Add sorting and pagination to main query
$sql .= " ORDER BY a.date DESC, s.last_name, s.first_name";

// Debug
error_log("SQL Query: " . $sql);
error_log("Params: " . print_r($params, true));

// Add pagination
if ($records_per_page > 0) {
    $sql .= " LIMIT ? OFFSET ?";
    $params[] = $records_per_page;
    $params[] = $offset;
}

// Fetch attendance records
try {
    // Debug SQL query
    error_log("Executing SQL: " . $sql);
    error_log("With params: " . print_r($params, true));
    
    $stmt = $pdo->prepare($sql);
    $stmt->execute($params);
    $attendance_records = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    // Debug results
    error_log("Found " . count($attendance_records) . " attendance records");
} catch (PDOException $e) {
    error_log("Error fetching attendance records: " . $e->getMessage());
    $attendance_records = [];
}
?>

<div class="container-fluid px-4">
    <div class="row">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="h3 mb-0 text-gray-800">
                    <i class="fas fa-calendar-check me-2"></i>Attendance Records
                </h2>
                <?php if (has_role('admin') || has_role('teacher')): ?>
                <div>
                    <a href="mark.php" class="btn btn-primary">
                        <i class="fas fa-plus-circle me-2"></i>Mark Attendance
                    </a>
                    <a href="report.php" class="btn btn-outline-primary ms-2">
                        <i class="fas fa-file-alt me-2"></i>Generate Report
                    </a>
                </div>
                <?php endif; ?>
            </div>

            <!-- Filter Card -->
            <div class="card shadow-sm mb-4">
                <div class="card-header py-3">
                    <h5 class="mb-0"><i class="fas fa-filter me-2"></i>Filter Records</h5>
                </div>
                <div class="card-body">
                    <form method="GET" action="" id="filterForm">
                        <div class="row g-3">
                            <!-- Date Range -->
                            <div class="col-md-3">
                                <label for="start_date" class="form-label">Start Date</label>
                                <input type="date" class="form-control" id="start_date" name="start_date" 
                                       value="<?php echo htmlspecialchars($filter_start_date); ?>">
                            </div>
                            <div class="col-md-3">
                                <label for="end_date" class="form-label">End Date</label>
                                <input type="date" class="form-control" id="end_date" name="end_date" 
                                       value="<?php echo htmlspecialchars($filter_end_date); ?>">
                            </div>
                            
                            <!-- Course -->
                            <div class="col-md-3">
                                <label for="course_id" class="form-label">Course</label>
                                <select class="form-select" id="course_id" name="course_id">
                                    <option value="">All Courses</option>
                                    <?php foreach ($courses as $course): ?>
                                    <option value="<?php echo htmlspecialchars($course['id']); ?>"
                                            <?php echo ($filter_course_id == $course['id']) ? 'selected' : ''; ?>>
                                        <?php echo htmlspecialchars($course['name']); ?>
                                    </option>
                                    <?php endforeach; ?>
                                </select>
                            </div>

                            <!-- Subject (dynamically loaded) -->
                            <div class="col-md-3">
                                <label for="subject_id" class="form-label">Subject</label>
                                <select class="form-select" id="subject_id" name="subject_id">
                                    <option value="">All Subjects</option>
                                </select>
                            </div>

                            <!-- Student (for admin/teacher only) -->
                            <?php if (has_role('admin') || has_role('teacher')): ?>
                            <div class="col-md-3">
                                <label for="student_id" class="form-label">Student</label>
                                <select class="form-select" id="student_id" name="student_id">
                                    <option value="">All Students</option>
                                    <?php foreach ($students_list as $student): ?>
                                    <option value="<?php echo htmlspecialchars($student['id']); ?>"
                                            <?php echo ($filter_student_id == $student['id']) ? 'selected' : ''; ?>>
                                        <?php echo htmlspecialchars($student['last_name'] . ', ' . $student['first_name']); ?>
                                    </option>
                                    <?php endforeach; ?>
                                </select>
                            </div>
                            <?php endif; ?>

                            <!-- Status -->
                            <div class="col-md-3">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-select" id="status" name="status">
                                    <option value="">All Status</option>
                                    <option value="present" <?php echo ($filter_status === 'present') ? 'selected' : ''; ?>>Present</option>
                                    <option value="absent" <?php echo ($filter_status === 'absent') ? 'selected' : ''; ?>>Absent</option>
                                    <option value="late" <?php echo ($filter_status === 'late') ? 'selected' : ''; ?>>Late</option>
                                </select>
                            </div>

                            <!-- Filter Buttons -->
                            <div class="col-12">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-filter me-2"></i>Apply Filters
                                </button>
                                <a href="list.php" class="btn btn-light ms-2">
                                    <i class="fas fa-times me-2"></i>Clear Filters
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Records Display -->
            <div class="card shadow-sm">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold text-primary">Attendance Records</h6>
                    <span class="badge bg-primary"><?php echo $total_records; ?> Records</span>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <?php if (empty($attendance_records)): ?>
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>No attendance records found.
                            </div>
                        <?php else: ?>
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Student</th>
                                        <th>Course</th>
                                        <th>Subject</th>
                                        <th>Status</th>
                                        <th>Marked By</th>
                                        <?php if (has_role('admin') || has_role('teacher')): ?>
                                        <th>Actions</th>
                                        <?php endif; ?>
                                    </tr>
                                </thead>
                                <tbody>
                                    <?php foreach ($attendance_records as $record): ?>
                                    <tr>
                                        <td><?php echo date('M d, Y', strtotime($record['date'])); ?></td>
                                        <td><?php echo htmlspecialchars($record['student_first_name'] . ' ' . $record['student_last_name']); ?></td>
                                        <td><?php echo htmlspecialchars($record['course_name']); ?></td>
                                        <td><?php echo htmlspecialchars($record['subject_name']); ?></td>
                                        <td>
                                            <span class="badge bg-<?php 
                                                echo match($record['status']) {
                                                    'present' => 'success',
                                                    'absent' => 'danger',
                                                    'late' => 'warning',
                                                    default => 'secondary'
                                                }; 
                                            ?>">
                                                <?php echo ucfirst($record['status']); ?>
                                            </span>
                                        </td>
                                        <td><?php echo htmlspecialchars($record['marked_by_first_name'] . ' ' . $record['marked_by_last_name']); ?></td>
                                        <?php if (has_role('admin') || has_role('teacher')): ?>
                                        <td>
                                            <div class="btn-group">
                                                <a href="edit.php?id=<?php echo $record['attendance_id']; ?>" 
                                                   class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" 
                                                        class="btn btn-sm btn-outline-danger"
                                                        onclick="confirmDelete(<?php echo $record['attendance_id']; ?>)">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                        <?php endif; ?>
                                    </tr>
                                    <?php endforeach; ?>
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        <?php if ($total_pages > 1): ?>
                        <nav aria-label="Page navigation" class="mt-4">
                            <ul class="pagination justify-content-center">
                                <?php if ($current_page > 1): ?>
                                <li class="page-item">
                                    <a class="page-link" href="?<?php echo http_build_query(array_merge($_GET, ['page' => $current_page - 1])); ?>">
                                        Previous
                                    </a>
                                </li>
                                <?php endif; ?>

                                <?php
                                $start_page = max(1, min($current_page - 2, $total_pages - 4));
                                $end_page = min($total_pages, max(5, $current_page + 2));
                                
                                for ($i = $start_page; $i <= $end_page; $i++):
                                ?>
                                <li class="page-item <?php echo ($i == $current_page) ? 'active' : ''; ?>">
                                    <a class="page-link" href="?<?php echo http_build_query(array_merge($_GET, ['page' => $i])); ?>">
                                        <?php echo $i; ?>
                                    </a>
                                </li>
                                <?php endfor; ?>

                                <?php if ($current_page < $total_pages): ?>
                                <li class="page-item">
                                    <a class="page-link" href="?<?php echo http_build_query(array_merge($_GET, ['page' => $current_page + 1])); ?>">
                                        Next
                                    </a>
                                </li>
                                <?php endif; ?>
                            </ul>
                        </nav>
                        <?php endif; ?>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for dynamic subject loading and delete confirmation -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const courseSelect = document.getElementById('course_id');
    const subjectSelect = document.getElementById('subject_id');
    
    // Function to load subjects based on selected course
    function loadSubjects(courseId) {
        if (!courseId) {
            subjectSelect.innerHTML = '<option value="">All Subjects</option>';
            return;
        }

        fetch('get_subjects.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: 'course_id=' + encodeURIComponent(courseId) + '&csrf_token=' + encodeURIComponent('<?php echo generate_csrf_token(); ?>')
        })
        .then(response => response.json())
        .then(data => {
            subjectSelect.innerHTML = '<option value="">All Subjects</option>';
            data.forEach(subject => {
                const option = document.createElement('option');
                option.value = subject.id;
                option.textContent = subject.name;
                if (subject.id === '<?php echo $filter_subject_id; ?>') {
                    option.selected = true;
                }
                subjectSelect.appendChild(option);
            });
        })
        .catch(error => {
            console.error('Error loading subjects:', error);
            subjectSelect.innerHTML = '<option value="">Error loading subjects</option>';
        });
    }

    // Initialize subjects if course is selected
    if (courseSelect && courseSelect.value) {
        loadSubjects(courseSelect.value);
    }

    // Add event listener for course changes
    if (courseSelect) {
        courseSelect.addEventListener('change', function() {
            loadSubjects(this.value);
        });
    }

    // Date validation
    const startDate = document.getElementById('start_date');
    const endDate = document.getElementById('end_date');
    
    if (startDate && endDate) {
        startDate.addEventListener('change', validateDates);
        endDate.addEventListener('change', validateDates);
    }

    function validateDates() {
        if (startDate.value && endDate.value && startDate.value > endDate.value) {
            alert('Start date cannot be later than end date');
            endDate.value = startDate.value;
        }
    }
});

// Delete confirmation
function confirmDelete(id) {
    if (confirm('Are you sure you want to delete this attendance record? This action cannot be undone.')) {
        window.location.href = `delete.php?id=${id}`;
    }
}
</script>

<?php require_once '../includes/footer.php'; ?>
